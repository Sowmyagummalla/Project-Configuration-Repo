============================ GRAFANA AND PROMETHEUS   on Ubuntu  ==================================

    1   apt-get update
    2  sudo apt-get install -y software-properties-common
    3  sudo add-apt-repository "deb https://packages.grafana.com/oss/deb stable main"
    4  wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -
    5  sudo apt-get update
    6  sudo apt-get install grafana
    7  sudo systemctl start grafana-server
    8  sudo systemctl enable grafana-server
    9  sudo systemctl status grafana-server
   10  sudo apt-get install prometheus
   11  sudo systemctl enable Prometheus ---------------------------open Prometheus by instanceIP:9090 and then in Alerts execute the following command 
100 - (avg by (instance) (irate(node_cpu_seconds_total{mode="idle", instance="localhost:9100"}[10m])) * 100)
   12  sudo apt update
   13  sudo apt install -y stress
   14  sudo systemctl status prometheus
   15  stress --vm 1 --vm-bytes 512mb --vm-keep --timeout 60s
   16  stress --cpu 1 --timeout 60
   17  stress --cpu 1 --timeout 2




====================================== LINUX - SERVER  GRAFANA INSTALLATION ==================================================== 
sudo systemctl status grafana
wget -q -O gpg.key https://rpm.grafana.com/gpg.key
sudo rpm --import gpg.key
sudo vi /etc/yum.repos.d/grafana.repo

    [grafana]
    name=grafana
   baseurl=https://rpm.grafana.com
    repo_gpgcheck=1
    enabled=1
    gpgcheck=1
    gpgkey=https://rpm.grafana.com/gpg.key
    sslverify=1
    sslcacert=/etc/pki/tls/certs/ca-bundle.crt

  sudo dnf install grafana
  sudo /bin/systemctl daemon-reload
  sudo /bin/systemctl enable grafana-server.service
  sudo /bin/systemctl start grafana-server.service
  sudo /bin/systemctl status grafana-server.service




============================ GRAFANA AND PROMETHEUS  AND NODE EXPORTER  on Ubuntu  ==================================
sudo apt update
wget https://github.com/prometheus/prometheus/releases/download/v2.53.2/prometheus-2.53.2.linux-amd64.tar.gz
ls
tar -xvzf prometheus-2.53.2.linux-amd64.tar.gz
ls
rm -rf prometheus-2.53.2.linux-amd64.tar.gz
ls
cd prometheus-2.53.2.linux-amd64/
ls     
cd prometheus-2.53.2.linux-amd64/
ls
mkdir /etc/prometheus /var/lib/prometheus
ls
mv prometheus promtool /usr/local/bin
ls
mv prometheus.yml /etc/prometheus/
ls
mv consoles/ console_libraries/ /etc/prometheus/
ls
prometheus --version
sudo useradd -rs /bin/false prometheus
ls
sudo chown -R prometheus: /etc/prometheus/ /var/lib/prometheus/
systemctl status prometheus
sudo vi /etc/systemd/system/prometheus.service

[Unit]
Description=Prometheus
Wants=network-online.target
After=network-online.target

[Service]
User=prometheus
Group=prometheus
Type=simple
Restart=on-failure
RestartSec=5s
ExecStart=/usr/local/bin/prometheus \
    --config.file /etc/prometheus/prometheus.yml \
    --storage.tsdb.path /var/lib/prometheus/ \
    --web.console.templates=/etc/prometheus/consoles \
    --web.console.libraries=/etc/prometheus/console_libraries \
    --web.listen-address=0.0.0.0:9090 \
    --web.enable-lifecycle \
    --log.level=info

[Install]
WantedBy=multi-user.target


  systemctl daemon-reload
  systemctl enable prometheus
  sudo systemctl start prometheus
  sudo systemctl status prometheus
  wget https://github.com/prometheus/node_exporter/releases/download/v1.8.2/node_exporter-1.8.2.linux-amd64.tar.gz
  ls
 tar -xvzf node_exporter-1.8.2.linux-amd64.tar.gz
ls
rm -rf node_exporter-1.8.2.linux-amd64.tar.gz
ls
sudo mv node_exporter-1.8.2.linux-amd64/node_exporter /usr/local/bin
rm -r node_exporter-1.8.2.linux-amd64/
ls
sudo useradd -rs /bin/false node_exporter
sudo vi /etc/systemd/system/node_exporter.service

[Unit]
Description=Node Exporter
Wants=network-online.target
After=network-online.target

[Service]
User=node_exporter
Group=node_exporter
Type=simple
Restart=on-failure
RestartSec=5s
ExecStart=/usr/local/bin/node_exporter

[Install]
WantedBy=multi-user.target

systemctl daemon-reload
systemctl enable node_exporter
systemctl start node_exporter
systemctl status node_exporter
sudo vi /etc/prometheus/prometheus.yml
# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "prometheus"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ["localhost:9090"]
  - job_name: "prometheus_collector"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ["13.232.248.152:9100"]


sudo systemctl restart prometheus
    
sudo apt-get install -y apt-transport-https software-properties-common
sudo wget -q -O /usr/share/keyrings/grafana.key https://apt.grafana.com/gpg.key
echo "deb [signed-by=/usr/share/keyrings/grafana.key] https://apt.grafana.com stable main" | sudo tee -a /etc/apt/sources.list.d/grafana.list
sudo apt-get update
sudo apt-get install grafana
sudo systemctl daemon-reload
sudo systemctl enable grafana-server.service
sudo systemctl start grafana-server
sudo systemctl status grafana-server
apt install stress
stress --cpu 8 --io 4 --vm 2 --vm-bytes 128M --timeout 10s
cd /etc/grafana/
ls
vi grafana.ini --------- Go to smtp line and configure your mail id   lineno:1024
  [smtp]
enabled = true
host = smtp.gmail.com:465
user = sowmyareddygummalla@gmail.com
# If the password contains # or ; you have to wrap it with triple quotes. Ex """#password;"""
password =bhwe jmvd dkci tpbz        -------- This is taken from your mail by going to security --->App Passwords----> App Name: Grafana ---->Generate-----> Copy Password
;cert_file = 
;key_file =
skip_verify = true
from_address = admin@grafana.localhost
from_name = Grafana
# EHLO identity in SMTP dialog (defaults to instance_name)
;ehlo_identity = dashboard.example.com
# SMTP startTLS policy (defaults to 'OpportunisticStartTLS')
;startTLS_policy = NoStartTLS
# Enable trace propagation in e-mail headers, using the 'traceparent', 'tracestate' and (optionally) 'baggage' fields (defaults to false)
;enable_tracing = false

  systemctl restart grafana-server

